
 var __sqr__ = ""
 const canvas_width = innerHeight-80
 const panel_width = 110 //90
 const palette_size = 0.78
 const grid_width = 25 //Math.round(canvas_width/38)
 const panel_alpha_width = 2
 const grid_Alpha = 0.75 //0.65
 const activeButtonColor = "rgba(185,158,153,0.2)"
  
  var background = document.createElement("div")
  background.style.position = "fixed"
  background.style.top = "0"
  connection.body.append(background)
    background.addResizeMap(function(e) {
    e.style.width = innerWidth + "px"
    e.style.height = innerHeight + "px"
   })
  var canvas = new Canvas(canvas_width, canvas_width)
   canvas.save()
   connection.body.append(canvas.element)
   var move = new Move(canvas.canvas, canvas.element, function(e) { 
    if(e.altKey || executor.alt) { return true }
   })
    
  var palette = new Palette(palette_size)
   palette.body.style.top = "0"
   palette.body.addResizeMap(function(e) {
    var left = (innerWidth - e.offsetWidth)/2
    e.style.marginLeft = left + "px"
    e.style.marginTop = "0px"
    e.button.style.marginLeft = 140 * palette_size + left + "px"
   })
  connection.body.append(palette.body)
  
    var panel = new Panel(panel_width, "paint_colors_")
    panel.body.style.zIndex = "10"
    panel.body.style.top = "0"
    connection.body.append(panel.body)


  var tools = new Tools(1)
  tools.element.style.display = "none"
  tools.element.style.top = "0"
  connection.body.append(tools.element)
  
  tools.controls.create("Grid", function(e) { 
    canvas.changeMarkup(e)
  })
  tools.controls.create("Clear", canvas.clear)
  tools.controls.create("Save", function() {  
   var a = document.createElement("a")
   a.href = canvas.canvas.toDataURL(); 
   a.download = "Image"
   a.click()
   })
  tools.controls.create("Cansel", canvas.back)
  tools.controls.create("Switch", function() { bookmark_two.closeBook(); tools.mode.start() })
  tools.controls.create("Move", function(e) { 
  if(executor.alt) { executor.alt = false; e.style.backgroundColor = "" }
  else { executor.alt = true; e.style.backgroundColor = activeButtonColor  }
    })
  var bookmark_one = new bookmark(100, 28, palette.body, 80)
   bookmark_one.element.style.position = "fixed"
   bookmark_one.element.style.top="0px"
   bookmark_one.element.addResizeMap(function(e) {
   e.style.maginTop = "0px"
   e.style.marginLeft = (innerWidth - e.offsetWidth)/2 + "px"
     })
  bookmark_one.element.onclick = function(e) {
   if(toElement(bookmark_one.element, e.x, 0).x > this.offsetWidth/2) { tools.controlBrush(1) }
   else { tools.controlBrush(-1); }
   }
  connection.body.append(bookmark_one.element)

  var bookmark_two = new bookmark(28, 135, tools.element, 80)
  bookmark_two.element.style.position = "fixed"
  bookmark_two.element.addResizeMap(function(e) {
   e.style.marginLeft = "0px"
   e.style.marginTop = (innerHeight-260) + "px"
     })
   bookmark_two.element.addListener(bookmark_two.take, bookmark_two.move, bookmark_two.drop)
   bookmark_two.element.style.top = "0px"
   bookmark_two.on_open(function() { tools.mode.cansel() })
   bookmark_two.element.style.display = "block"
   bookmark_two.element.onclick = function(e) {
       var l = e.layerY
       if(l > this.offsetHeight/2) { l = 1 } else { l = -1 }
       if(tools.mode.active) { tools.mode.switch(l) }
         else { tools.mode.start() }
   }
  connection.body.append(bookmark_two.element);
    

  document.getElementById("start").addResizeMap(function(e) {
  e.style.marginLeft = (innerWidth - e.offsetWidth)/2 + "px"
  e.style.marginTop = (innerHeight/2 + 20) + "px"
    })
  document.getElementsByClassName("sizes")[0].addResizeMap(function(e) {
  e.style.marginLeft = (innerWidth - e.offsetWidth)/2 + 45 + "px"
  e.style.marginTop = (innerHeight/2) - 85 + "px"
    })
  document.getElementsByClassName("sizes")[1].addResizeMap(function(e) {
  e.style.marginTop = (innerHeight/2 - 30) + "px"
  e.style.marginLeft = (innerWidth - e.offsetWidth)/2 + "px"
    })
  document.getElementById("preload").addResizeMap(function(e) {
   e.style.height = innerHeight + "px"
    })
  document.getElementById("table").addResizeMap(function(e) {
   e.style.marginTop = innerHeight/2 - 170 + "px"
   e.style.marginLeft = (innerWidth - e.offsetWidth)/2 + "px"
    }); 
 
   document.addEventListener("mousedown",executor.down)
   document.addEventListener("mousemove",executor.move)
   document.addEventListener("mouseup", executor.up)
   document.addEventListener("ontouchstart", executor.down)
   document.addEventListener("ontouchmove", function(e) { e.preventDefault(); executor.move(e) })
   document.addEventListener("ontouchend", executor.up)


  
   window.onresize = function() {
    var events = EventBase.getClass("resize-map")
     for(var i = 0; i < events.length; i++) {
      events[i].event(events[i].element)
       }
     }
   window.onload = function() {   window.onresize()  }

  